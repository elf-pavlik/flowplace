<game>
  <description lang="en">
    Issued currencies are used when an issuer would like a community to be able to trade based on a particular set of valuables it can produce.<br />
    Player classes: issuer, member<br />
    Issuer Summary function: Balance<br />
    Issuer Plays: Issue(to_member,amount); Pay(to_member,amount)<br />
    Member Plays: Pay(to_member,amount); Reeem(to_issuer,amount)<br />
  </description>
  <player_classes>
    <player_class name="issuer" />
    <player_class name="member" />
  </player_classes>
  <states>
    <state player_class="member"><integer name="balance" /><integer name="volume" /></state>
    <state player_class="issuer"><integer name="in_circulation" /><integer name="volume" /></state>
  </states>

  <plays>
    <play name="_new_member">
      <script type="ruby">
          <![CDATA[ @member_state.balance = 0; @member_state.volume=0]]>
      </script>
    </play>
    <play name="_new_issuer">
      <script type="ruby">
          <![CDATA[ @issuer_state.volume=0;@issuer_state.in_circulation=0]]>
      </script>
    </play>
    <play name="pay" player_classes="member">
      <fields>
         <field type="player_member" id="from" />
         <field type="player_member" id="to" />
         <field type="integer" id="amount" />
         <field type="string" id="memo" />
      </fields>
      <script type="ruby">
        <![CDATA[
        if @play.from['balance'] >= @play.amount
          @play.from['balance'] -= @play.amount
          @play.to['volume'] += @play.amount.abs
          @play.to['balance'] += @play.amount
          @play.from['volume'] += @play.amount.abs
          true
        else
          "Insufficient Funds"
        end
        ]]>
      </script>
      <play_sentence lang='en'><from /> pays <to /> <amount /> for <memo /></play_sentence>
    </play>
    <play name="issue" player_classes="issuer">
      <fields>
        <field type="player_issuer" id="from" />
        <field type="player_member" id="to" />
        <field type="integer" id="amount" />
        <field type="string" id="memo" />
      </fields>
      <script type="ruby">
        <![CDATA[
        @play.from['in_circulation'] += @play.amount
        @play.from['volume'] += @play.amount.abs
        @play.to['balance'] += @play.amount
        @play.to['volume'] += @play.amount.abs
        true
        ]]>
      </script>
      <play_sentence lang='en'><from /> issues to <to /> <amount /> for <memo /></play_sentence>
    </play>
    <play name="retire" player_classes="issuer">
      <fields>
        <field type="player_issuer" id="from" />
        <field type="player_member" id="to" />
        <field type="integer" id="amount" />
         <field type="string" id="memo" />
      </fields>
      <script type="ruby">
        <![CDATA[
        @play.from['in_circulation'] -= @play.amount
        @play.from['volume'] += @play.amount.abs
        @play.to['balance'] -= @play.amount
        @play.to['volume'] += @play.amount.abs
        true
        ]]>
      </script>
      <play_sentence lang='en'><from /> retires from <to /> <amount /> for <memo /></play_sentence>
    </play>
  </plays>
</game>